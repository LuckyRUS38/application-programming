import telebot
import cfg
import SQLConnect as sql
import requests
from datetime import datetime

# Initialize
token = cfg.token
bot = telebot.TeleBot(token, parse_mode=None)
symbolAngle = {'imperial': '¬∞F', 'metric': '‚ÑÉ'}
systemUnits = {'imperial': '—É–∑–µ–ª', 'metric': '–º/—Å'}
weather = {'01d': '‚òÄ', '02d': '‚õÖ', '03d': '‚òÅ', '04d': '‚òÅ', '09d': 'üåß', '10d': 'üíß', '11d': '‚õà', '13d': '‚ùÑ', '50d': 'üå´'}

# Keyboards
main_keyboard = None
settings_keyboard = None
change_days_keyboard = None
change_units_keyboard = None

keyboards = {'main_menu': main_keyboard, 'settings_menu': settings_keyboard, 'change_days_menu': change_days_keyboard,
             'change_units_menu': change_units_keyboard}

# Function Keyboard Generate


def generate_keyboard():
    global main_keyboard
    main_keyboard = telebot.types.ReplyKeyboardMarkup()
    key1 = telebot.types.KeyboardButton('‚öôÔ∏è–ù–ê–°–¢–†–û–ô–ö–ò')
    key2 = telebot.types.KeyboardButton('üí≥–ü–û–î–î–ï–†–ñ–ê–¢–¨ –ê–í–¢–û–†–ê')
    key3 = telebot.types.KeyboardButton('üîç–ü–û–ú–û–©–¨')
    key4 = telebot.types.KeyboardButton('üí°–û–±–Ω–æ–≤–ª–µ–Ω–∏—è')
    main_keyboard.row(key1, key2)
    main_keyboard.row(key3, key4)

    global settings_keyboard
    settings_keyboard = telebot.types.ReplyKeyboardMarkup()
    key1 = telebot.types.KeyboardButton('–ò–ó–ú–ï–ù–ò–¢–¨ –ö–û–õ–ò–ß–ï–°–¢–í–û –î–ù–ï–ô')
    key2 = telebot.types.KeyboardButton('–ò–ó–ú–ï–ù–ò–¢–¨ –°–ò–°–¢–ï–ú–£ –ò–ó–ú–ï–†–ï–ù–ò–ô')
    key3 = telebot.types.KeyboardButton('‚Ü©Ô∏è–ù–ê–ó–ê–î')
    settings_keyboard.row(key1)
    settings_keyboard.row(key2)
    settings_keyboard.row(key3)

    global change_days_keyboard
    change_days_keyboard = telebot.types.ReplyKeyboardMarkup()
    key1 = telebot.types.KeyboardButton('‚Ü©Ô∏è–ù–ê–ó–ê–î')
    change_days_keyboard.row(key1)

    global change_units_keyboard
    change_units_keyboard = telebot.types.ReplyKeyboardMarkup()
    key1 = telebot.types.KeyboardButton('üëë–ò–º–ø–µ—Ä—Å–∫–∞—è')
    key2 = telebot.types.KeyboardButton('‚ìÇÔ∏è–ú–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è')
    key3 = telebot.types.KeyboardButton('‚Ü©Ô∏è–ù–ê–ó–ê–î')
    change_units_keyboard.row(key1, key2)
    change_units_keyboard.row(key3)


# Functions


def check_user(chat_id):
    if not sql.is_user_exists(chat_id):
        sql.add_user(chat_id, 'main_menu', 7, 'metric')


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    check_user(message.chat.id)
    bot.reply_to(message, f"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π, –∏ —É–∑–Ω–∞–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–π—Ç–∏ —Å Telegram –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ,"
                          f" –¥–∞–ª–µ–µ –≤—ã—Å–ª–∞—Ç—å –≤ —ç—Ç–æ—Ç —á–∞—Ç –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, –≥–æ—Ç–æ–≤–æ!", reply_markup=main_keyboard)


@bot.message_handler(content_types=['location'])
def handle_location(message):
    check_user(message.chat.id)
    url = 'http://api.openweathermap.org/data/2.5/forecast/daily?lat=%s&lon=%s&appid=%s&mode=%s&lang=%s&units=%s&cnt=%s'
    urlForDecode = 'http://api.openweathermap.org/geo/1.0/reverse?lat=%s&lon=%s&limit=5&appid=%s'
    lat = message.location.latitude
    lon = message.location.longitude
    addressDecode = urlForDecode % (lat, lon, cfg.API_KEY)
    address = url % (lat, lon, cfg.API_KEY, cfg.MODE, cfg.LANG, sql.get_user_units(message.chat.id),
                     sql.get_user_days_qty(message.chat.id))
    responseDecode = requests.get(addressDecode)
    response = requests.get(address)
    if response.status_code == 200:
        data = response.json()
        dataDecode = responseDecode.json()
        bot.send_message(message.chat.id,
                         f"–í–∞—à–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ - {dataDecode[0]['state']}, {dataDecode[0]['local_names']['ru']}"
                         f"\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ –Ω–∞ {sql.get_user_days_qty(message.chat.id)} –¥–Ω–µ–π:\n")
        for i in range(0, sql.get_user_days_qty(message.chat.id)):
            bot.send_message(message.chat.id,
                             f"–î–∞—Ç–∞ - {datetime.utcfromtimestamp(int(data['list'][i]['dt'])).strftime('%d.%m.%Y')},"
                             f" {weather[data['list'][i]['weather'][0]['icon']]}"
                             f"{data['list'][i]['weather'][0]['description']} "
                             f"\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: \n  –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: {data['list'][i]['temp']['min']}"
                             f"{symbolAngle[sql.get_user_units(message.chat.id)]}"
                             f"\n  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: {data['list'][i]['temp']['max']}"
                             f"{symbolAngle[sql.get_user_units(message.chat.id)]} "
                             f"\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: \n  –í—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ - "
                             f"{datetime.utcfromtimestamp(int(data['list'][i]['sunset'])).strftime('%H:%M')}"
                             f"\n  –í—Ä–µ–º—è –∑–∞—Ö–æ–¥–∞ - "
                             f"{datetime.utcfromtimestamp(int(data['list'][i]['sunrise'])).strftime('%H:%M')}"
                             f"\n  –í–ª–∞–∂–Ω–æ—Å—Ç—å - {data['list'][i]['humidity']}%"
                             f"\n  –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ - "
                             f"{data['list'][i]['speed']}{systemUnits[sql.get_user_units(message.chat.id)]}")

        print('All good!')
    elif response.status_code == 401:
        print('Key protyx')
    elif response.status_code == 400:
        print('Bad requets')


@bot.message_handler(content_types=['text'])
def handle_text(message):
    check_user(message.chat.id)
    user_step = sql.get_user_step(message.chat.id)
    if message.text == 'üîç–ü–û–ú–û–©–¨' and user_step == 'main_menu':
        send_welcome(message)
        return
    elif message.text == '‚öôÔ∏è–ù–ê–°–¢–†–û–ô–ö–ò' and user_step == 'main_menu':
        sql.change_step(message.chat.id, 'settings_menu')
        bot.send_message(message.chat.id, f'üß≠[–ù–ê–í–ò–ì–ê–¶–ò–Ø] –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ --> ‚öôÔ∏è–ù–ê–°–¢–†–û–ô–ö–ò (–í–´ –ó–î–ï–°–¨)',
                         reply_markup=settings_keyboard)
        return
    elif message.text == 'üí≥–ü–û–î–î–ï–†–ñ–ê–¢–¨ –ê–í–¢–û–†–ê' and user_step == 'main_menu':
        bot.send_message(message.chat.id,
                         '–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ö–æ—Ç—å –∫–∞–∫–∞—è-—Ç–æ –∫–æ–ø–µ–µ—á–∫–∞, –∫–æ—Ç–æ—Ä–æ–π –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞, '
                         '—Ç–æ –º–æ–∂–µ—Ç–µ –∏—Ö –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ.'
                         ' \n–ü–ï–†–ï–ô–î–Ø –°–Æ–î–ê --> https://donate.qiwi.com/payin/LuckyRUS38')
        return
    elif message.text == '–ò–ó–ú–ï–ù–ò–¢–¨ –ö–û–õ–ò–ß–ï–°–¢–í–û –î–ù–ï–ô' and user_step == 'settings_menu':
        sql.change_step(message.chat.id, 'change_days_menu')
        bot.send_message(message.chat.id, f'üß≠[–ù–ê–í–ò–ì–ê–¶–ò–Ø] –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ --> ‚öôÔ∏è–ù–ê–°–¢–†–û–ô–ö–ò --> '
                                          f'–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π (–í–´ –ó–î–ï–°–¨)', reply_markup=change_days_keyboard)
        return
    elif message.text == '‚Ü©Ô∏è–ù–ê–ó–ê–î' and user_step == 'settings_menu':
        sql.change_step(message.chat.id, 'main_menu')
        bot.send_message(message.chat.id, 'üß≠[–ù–ê–í–ò–ì–ê–¶–ò–Ø] –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=main_keyboard)
        return
    elif message.text == '‚Ü©Ô∏è–ù–ê–ó–ê–î' and (user_step in ('change_days_menu', 'change_units_menu')):
        sql.change_step(message.chat.id, 'settings_menu')
        bot.send_message(message.chat.id, 'üß≠[–ù–ê–í–ò–ì–ê–¶–ò–Ø] –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.', reply_markup=settings_keyboard)
        return
    elif message.text == '–ò–ó–ú–ï–ù–ò–¢–¨ –°–ò–°–¢–ï–ú–£ –ò–ó–ú–ï–†–ï–ù–ò–ô' and user_step == 'settings_menu':
        sql.change_step(message.chat.id, 'change_units_menu')
        bot.send_message(message.chat.id, f'üß≠[–ù–ê–í–ò–ì–ê–¶–ò–Ø] –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ --> ‚öôÔ∏è–ù–ê–°–¢–†–û–ô–ö–ò --> '
                                          f'–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏–∑–º–µ—Ä–µ–Ω–∏–π –í–´ –ó–î–ï–°–¨)', reply_markup=change_units_keyboard)
        return
    elif message.text == 'üëë–ò–º–ø–µ—Ä—Å–∫–∞—è' and user_step == 'change_units_menu':
        sql.change_units_system(message.chat.id, 'imperial')
        sql.change_step(message.chat.id, 'settings_menu')
        bot.send_message(message.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å–∏—Å—Ç–µ–º—É –∏–∑–º–µ—Ä–µ–Ω–∏–π –Ω–∞ –ò–ú–ü–ï–†–°–ö–£–Æ',
                         reply_markup=settings_keyboard)
        return
    elif message.text == '‚ìÇÔ∏è–ú–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è' and user_step == 'change_units_menu':
        sql.change_units_system(message.chat.id, 'metric')
        sql.change_step(message.chat.id, 'settings_menu')
        bot.send_message(message.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å–∏—Å—Ç–µ–º—É –∏–∑–º–µ—Ä–µ–Ω–∏–π –Ω–∞ –ú–ï–¢–†–ò–ß–ï–°–ö–£–Æ',
                         reply_markup=settings_keyboard)
        return
    elif message.text == 'üí°–û–±–Ω–æ–≤–ª–µ–Ω–∏—è' and user_step == 'main_menu':
        bot.send_message(message.chat.id, f"–í –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ v2.0"
                                          f"\n–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ —Å–∫–æ—Ä–æ—Å—Ç—å "
                                          f"–≤–µ—Ç—Ä–∞ –∏ –≤–ª–∞–∂–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—ã–µ "
                                          f"–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã –∏–∑–º–µ—Ä–µ–Ω–∏–π –±—É–¥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è"
                                          f"\n–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, —Ç–µ–ø–µ—Ä—å –≤–∞—à–∏"
                                          f" –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –ø—Ä–æ–ø–∞–¥—É—Ç, –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã."
                                          f"\n\n–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å —ç—Ç–∏–º –±–æ—Ç–æ–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –µ–≥–æ –¥–µ–Ω–µ–∂–∫–æ–π:)")

    if user_step == 'change_days_menu':
        if message.text != '‚Ü©Ô∏è–ù–ê–ó–ê–î':
            user_input = message.text
            if not user_input.isnumeric():
                bot.send_message(message.chat.id, f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑. '
                                                  f'\n–ü–æ–¥—Å–∫–∞–∑–∫–∞: –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 16.',
                                 reply_markup=change_days_keyboard)
                return
            number = int(user_input)
            if number > 16 or number < 1:
                bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 16-—Ç–∏, '
                                                  '–∞ —Ç–∞–∫–∂–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 1-–≥–æ.',
                                 reply_markup=change_days_keyboard)
                return
            else:
                sql.change_days_qty(message.chat.id, number)
                sql.change_step(message.chat.id, 'settings_menu')
                bot.send_message(message.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–∞ {number}',
                                 reply_markup=settings_keyboard)
                return


generate_keyboard()
bot.infinity_polling()
